package jpspackage;

//import com.mysql.jdbc.Driver;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashSet;
import java.util.Set;

public class DBObject {
	private static final String MYSQL_DATABASE_SERVER = "localhost:3306";
	private static final String MYSQL_DATABASE_NAME = "PAGE_SCRAPER_DB";
	private static final String MYSQL_USERNAME = "root";
	private static final String MYSQL_PASSWORD = "meri";
	
	private static final String TABLE_URLS = "visited_urls";
	public static final String TABLE_SCRAPED_LINKS = "scraped_links";
	public static final String TABLE_SCRAPED_IMAGE_SOURCES = "scraped_image_sources";

	public DBObject() {
		try {
			Class.forName("com.mysql.jdbc.Driver");
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
	}
	

	
	private Connection getConnection() {
		try {
			String connect = "jdbc:mysql://" + MYSQL_DATABASE_SERVER + "/" + MYSQL_DATABASE_NAME;
			return DriverManager.getConnection(connect, MYSQL_USERNAME, MYSQL_PASSWORD);
		} catch (SQLException e) {
			e.printStackTrace();
			System.err.println("MySQL user password server or db name is incorrect!");
			return null;
		}
	}
	
	
	private void closeConnection(Connection conn) {
		try {
			conn.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
		
	/**
	 * Returns result set generated by executing given query;
	 * 
	 * @param query
	 * @return {@link ResultSet}
	 */
	private ResultSet getResultSet(String query, Connection conn) {
		ResultSet result = null;
		try {
			Statement stmt = conn.createStatement();
			stmt.executeQuery("USE " + MYSQL_DATABASE_NAME + " ;");
			result = stmt.executeQuery(query);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return result;
	}
	
	
	
	/**
	 * Executes update queries, that is queries which cause changes in tables of
	 * the database;
	 * 
	 * @param query
	 * @throws SQLException
	 */
	private int executeUpdate(String query, Connection conn) {
		int id = 0;
		try {
			Statement stmt1;
			stmt1 = conn.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);
			stmt1.executeUpdate(query, Statement.RETURN_GENERATED_KEYS);
			ResultSet rs = stmt1.getGeneratedKeys();
			if (rs.next()) {
				id = rs.getInt(1);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return id;
	}
	
	
	/*
	 * Get id of a table entry with given url;
	 */
	private int getURLid(String url, Connection conn) throws SQLException {
		String query = "SELECT * FROM "+TABLE_URLS+" WHERE url like '"+url+"';";
//		System.out.println(query);
		ResultSet rs = this.getResultSet(query, conn);
		if(!rs.next()) {
			return -1;
		} else {
			return rs.getInt("id");
		}
	}
	
	/**
	 * 
	 * @param url
	 * @param scrapedDataSet
	 * @param tableName
	 * @throws SQLException
	 */
	public void addScrapedData(String url, Set<String> scrapedDataSet, String tableName) throws SQLException {
		Connection conn = getConnection();
		int urlID = getURLid(url, conn);
		if(urlID < 0) {
			urlID = addURL(url, conn);
		}
		String tableAttrName = "link_url";	//TODO: if instead of s/c ?
		switch(tableName) {
		case TABLE_SCRAPED_LINKS:
			tableAttrName = "link_url";
			break;
		case TABLE_SCRAPED_IMAGE_SOURCES:
			tableAttrName = "image_src";
			break;
		default:
			break;
		}
		String queryExistingDataForGivenURL = "SELECT " + tableAttrName+ " FROM "+tableName
																		+" WHERE url_id = " + urlID + ";";
		ResultSet rs = getResultSet(queryExistingDataForGivenURL, conn);
		Set<String> existingData = new HashSet<String>();
		
		while(rs.next()) {
			existingData.add(rs.getString(tableAttrName));
		}
		for(String link: scrapedDataSet) {
			if(!existingData.contains(link)) {
				addEntry(link, urlID, tableName, conn);
			}
		}		
		closeConnection(conn);
	}
	
	
	private int addEntry(String data, int urlId, String tableName, Connection conn) {
		String attrName = (tableName.equals(TABLE_SCRAPED_LINKS)) ? "link_url":"image_src";
		String query = "INSERT INTO "+tableName+" (url_id, " + attrName +") VALUES ("+urlId+", "
				+ "'" + data + "');";
		int newLinkEntryId = executeUpdate(query, conn);
		return newLinkEntryId;		
	}

	private int addURL(String url, Connection conn) {
		String query = "INSERT INTO "+TABLE_URLS+" (url) VALUES ('"+ url +"');";
//		System.out.println(query);
		return executeUpdate(query, conn);		
	}

}
